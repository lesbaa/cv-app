// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`DetailModal matches its snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <DetailModal
    hideSkillDetailModal={[MockFunction]}
    modalContent="<p>content markup in here from backend</p>"
    modalIsVisible={false}
    modalTitle="TITLE"
    palette={
      Object {
        "colors": Array [
          "#eee6ee",
          "#d9d9d9",
        ],
        "gradient": "to bottom right, #eee6ee, #d9d9d9",
      }
    }
    skillId="hello"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": "hello",
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="jsx-779896133 content"
        >
          <Title
            title="TITLE"
          />
          <div
            className="jsx-779896133 description"
          >
            <span
              className="jsx-779896133"
              dangerouslySetInnerHTML={
                Object {
                  "__html": "<p>content markup in here from backend</p>",
                }
              }
            />
             
          </div>
          <button
            className="jsx-779896133 close-icon"
            onClick={[MockFunction]}
          >
            <X
              color="currentColor"
              size="24"
            />
          </button>
        </div>,
        <JSXStyle
          css=".DetailModal.jsx-779896133{display:block;position:absolute;right:0;top:0;bottom:0;left:calc(30% + 15vw);height:100%;-webkit-transition:-webkit-clip-path 1s,clip-path 1s;transition:-webkit-clip-path 1s,clip-path 1s;-webkit-transform:translateX(0);-ms-transform:translateX(0);transform:translateX(0);-webkit-clip-path:circle(150% at bottom right);clip-path:circle(150% at bottom right);font-size:0.8em;z-index:3;}.content.jsx-779896133{margin:7.5vh;mix-blend-mode:color-burn;}.description.jsx-779896133{border-width:1px 0 1px 0;border-color:#444;border-style:solid;color:#333;font-weight:lighter;line-height:1.8;-webkit-letter-spacing:0.1em;-moz-letter-spacing:0.1em;-ms-letter-spacing:0.1em;letter-spacing:0.1em;}.DetailModal.is-closed.jsx-779896133{-webkit-transform:translateX(100%);-ms-transform:translateX(100%);transform:translateX(100%);-webkit-clip-path:circle(0px at bottom right);clip-path:circle(0px at bottom right);-webkit-transition:-webkit-clip-path 1s,clip-path 1s,-webkit-transform 0.01s 1s;-webkit-transition:-webkit-clip-path 1s,clip-path 1s,transform 0.01s 1s;transition:-webkit-clip-path 1s,clip-path 1s,transform 0.01s 1s;}.close-icon.jsx-779896133:hover>svg{opacity:0.5;-webkit-transition:0.5s;transition:0.5s;cursor:pointer;}.close-icon.jsx-779896133>svg{stroke:#333;stroke-width:1.5;}.close-icon.jsx-779896133{padding:0;-webkit-appearance:none;-moz-appearance:none;appearance:none;border-width:0;font-size:1.1em;margin-top:0.5em;float:right;}"
          styleId="779896133"
        />,
      ],
      "className": "jsx-779896133 DetailModal is-closed",
      "style": Object {
        "background": "linear-gradient(to bottom right, #eee6ee, #d9d9d9)",
      },
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <Title
              title="TITLE"
            />,
            <div
              className="jsx-779896133 description"
            >
              <span
                className="jsx-779896133"
                dangerouslySetInnerHTML={
                  Object {
                    "__html": "<p>content markup in here from backend</p>",
                  }
                }
              />
               
            </div>,
            <button
              className="jsx-779896133 close-icon"
              onClick={[MockFunction]}
            >
              <X
                color="currentColor"
                size="24"
              />
            </button>,
          ],
          "className": "jsx-779896133 content",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "title": "TITLE",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <span
                  className="jsx-779896133"
                  dangerouslySetInnerHTML={
                    Object {
                      "__html": "<p>content markup in here from backend</p>",
                    }
                  }
                />,
                " ",
              ],
              "className": "jsx-779896133 description",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "className": "jsx-779896133",
                  "dangerouslySetInnerHTML": Object {
                    "__html": "<p>content markup in here from backend</p>",
                  },
                },
                "ref": null,
                "rendered": null,
                "type": "span",
              },
              " ",
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <X
                color="currentColor"
                size="24"
              />,
              "className": "jsx-779896133 close-icon",
              "onClick": [MockFunction],
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "color": "currentColor",
                "size": "24",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": "button",
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "css": ".DetailModal.jsx-779896133{display:block;position:absolute;right:0;top:0;bottom:0;left:calc(30% + 15vw);height:100%;-webkit-transition:-webkit-clip-path 1s,clip-path 1s;transition:-webkit-clip-path 1s,clip-path 1s;-webkit-transform:translateX(0);-ms-transform:translateX(0);transform:translateX(0);-webkit-clip-path:circle(150% at bottom right);clip-path:circle(150% at bottom right);font-size:0.8em;z-index:3;}.content.jsx-779896133{margin:7.5vh;mix-blend-mode:color-burn;}.description.jsx-779896133{border-width:1px 0 1px 0;border-color:#444;border-style:solid;color:#333;font-weight:lighter;line-height:1.8;-webkit-letter-spacing:0.1em;-moz-letter-spacing:0.1em;-ms-letter-spacing:0.1em;letter-spacing:0.1em;}.DetailModal.is-closed.jsx-779896133{-webkit-transform:translateX(100%);-ms-transform:translateX(100%);transform:translateX(100%);-webkit-clip-path:circle(0px at bottom right);clip-path:circle(0px at bottom right);-webkit-transition:-webkit-clip-path 1s,clip-path 1s,-webkit-transform 0.01s 1s;-webkit-transition:-webkit-clip-path 1s,clip-path 1s,transform 0.01s 1s;transition:-webkit-clip-path 1s,clip-path 1s,transform 0.01s 1s;}.close-icon.jsx-779896133:hover>svg{opacity:0.5;-webkit-transition:0.5s;transition:0.5s;cursor:pointer;}.close-icon.jsx-779896133>svg{stroke:#333;stroke-width:1.5;}.close-icon.jsx-779896133{padding:0;-webkit-appearance:none;-moz-appearance:none;appearance:none;border-width:0;font-size:1.1em;margin-top:0.5em;float:right;}",
          "styleId": "779896133",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": "aside",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": "hello",
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="jsx-779896133 content"
          >
            <Title
              title="TITLE"
            />
            <div
              className="jsx-779896133 description"
            >
              <span
                className="jsx-779896133"
                dangerouslySetInnerHTML={
                  Object {
                    "__html": "<p>content markup in here from backend</p>",
                  }
                }
              />
               
            </div>
            <button
              className="jsx-779896133 close-icon"
              onClick={[MockFunction]}
            >
              <X
                color="currentColor"
                size="24"
              />
            </button>
          </div>,
          <JSXStyle
            css=".DetailModal.jsx-779896133{display:block;position:absolute;right:0;top:0;bottom:0;left:calc(30% + 15vw);height:100%;-webkit-transition:-webkit-clip-path 1s,clip-path 1s;transition:-webkit-clip-path 1s,clip-path 1s;-webkit-transform:translateX(0);-ms-transform:translateX(0);transform:translateX(0);-webkit-clip-path:circle(150% at bottom right);clip-path:circle(150% at bottom right);font-size:0.8em;z-index:3;}.content.jsx-779896133{margin:7.5vh;mix-blend-mode:color-burn;}.description.jsx-779896133{border-width:1px 0 1px 0;border-color:#444;border-style:solid;color:#333;font-weight:lighter;line-height:1.8;-webkit-letter-spacing:0.1em;-moz-letter-spacing:0.1em;-ms-letter-spacing:0.1em;letter-spacing:0.1em;}.DetailModal.is-closed.jsx-779896133{-webkit-transform:translateX(100%);-ms-transform:translateX(100%);transform:translateX(100%);-webkit-clip-path:circle(0px at bottom right);clip-path:circle(0px at bottom right);-webkit-transition:-webkit-clip-path 1s,clip-path 1s,-webkit-transform 0.01s 1s;-webkit-transition:-webkit-clip-path 1s,clip-path 1s,transform 0.01s 1s;transition:-webkit-clip-path 1s,clip-path 1s,transform 0.01s 1s;}.close-icon.jsx-779896133:hover>svg{opacity:0.5;-webkit-transition:0.5s;transition:0.5s;cursor:pointer;}.close-icon.jsx-779896133>svg{stroke:#333;stroke-width:1.5;}.close-icon.jsx-779896133{padding:0;-webkit-appearance:none;-moz-appearance:none;appearance:none;border-width:0;font-size:1.1em;margin-top:0.5em;float:right;}"
            styleId="779896133"
          />,
        ],
        "className": "jsx-779896133 DetailModal is-closed",
        "style": Object {
          "background": "linear-gradient(to bottom right, #eee6ee, #d9d9d9)",
        },
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <Title
                title="TITLE"
              />,
              <div
                className="jsx-779896133 description"
              >
                <span
                  className="jsx-779896133"
                  dangerouslySetInnerHTML={
                    Object {
                      "__html": "<p>content markup in here from backend</p>",
                    }
                  }
                />
                 
              </div>,
              <button
                className="jsx-779896133 close-icon"
                onClick={[MockFunction]}
              >
                <X
                  color="currentColor"
                  size="24"
                />
              </button>,
            ],
            "className": "jsx-779896133 content",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "title": "TITLE",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <span
                    className="jsx-779896133"
                    dangerouslySetInnerHTML={
                      Object {
                        "__html": "<p>content markup in here from backend</p>",
                      }
                    }
                  />,
                  " ",
                ],
                "className": "jsx-779896133 description",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "className": "jsx-779896133",
                    "dangerouslySetInnerHTML": Object {
                      "__html": "<p>content markup in here from backend</p>",
                    },
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "span",
                },
                " ",
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <X
                  color="currentColor"
                  size="24"
                />,
                "className": "jsx-779896133 close-icon",
                "onClick": [MockFunction],
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "color": "currentColor",
                  "size": "24",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": "button",
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "css": ".DetailModal.jsx-779896133{display:block;position:absolute;right:0;top:0;bottom:0;left:calc(30% + 15vw);height:100%;-webkit-transition:-webkit-clip-path 1s,clip-path 1s;transition:-webkit-clip-path 1s,clip-path 1s;-webkit-transform:translateX(0);-ms-transform:translateX(0);transform:translateX(0);-webkit-clip-path:circle(150% at bottom right);clip-path:circle(150% at bottom right);font-size:0.8em;z-index:3;}.content.jsx-779896133{margin:7.5vh;mix-blend-mode:color-burn;}.description.jsx-779896133{border-width:1px 0 1px 0;border-color:#444;border-style:solid;color:#333;font-weight:lighter;line-height:1.8;-webkit-letter-spacing:0.1em;-moz-letter-spacing:0.1em;-ms-letter-spacing:0.1em;letter-spacing:0.1em;}.DetailModal.is-closed.jsx-779896133{-webkit-transform:translateX(100%);-ms-transform:translateX(100%);transform:translateX(100%);-webkit-clip-path:circle(0px at bottom right);clip-path:circle(0px at bottom right);-webkit-transition:-webkit-clip-path 1s,clip-path 1s,-webkit-transform 0.01s 1s;-webkit-transition:-webkit-clip-path 1s,clip-path 1s,transform 0.01s 1s;transition:-webkit-clip-path 1s,clip-path 1s,transform 0.01s 1s;}.close-icon.jsx-779896133:hover>svg{opacity:0.5;-webkit-transition:0.5s;transition:0.5s;cursor:pointer;}.close-icon.jsx-779896133>svg{stroke:#333;stroke-width:1.5;}.close-icon.jsx-779896133{padding:0;-webkit-appearance:none;-moz-appearance:none;appearance:none;border-width:0;font-size:1.1em;margin-top:0.5em;float:right;}",
            "styleId": "779896133",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": "aside",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;
